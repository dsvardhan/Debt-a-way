{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dvard\\\\OneDrive\\\\Desktop\\\\Winter Projects\\\\p2p\\\\my-p2p-app\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactModal from 'react-modal';\nimport DebtPostingForm from './DebtPostingForm';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  token,\n  onLogout,\n  user,\n  updateUser\n}) => {\n  _s();\n  const [unfulfilledDebts, setUnfulfilledDebts] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [debtsOwedByUser, setDebtsOwedByUser] = useState([]); // Added state\n  const [debtsOwedToUser, setDebtsOwedToUser] = useState([]);\n  const [debtsHistory, setDebtsHistory] = useState([]);\n  const [walletBalance, setWalletBalance] = useState();\n  //const [walletBalance2, setWalletBalance2] = useState([]);\n\n  const [isTradeModalOpen, setIsTradeModalOpen] = useState(false);\n  const [selectedDebtForTrade, setSelectedDebtForTrade] = useState(null);\n  const [tradePrice, setTradePrice] = useState('');\n  const [tradableDebts, setTradableDebts] = useState([]);\n  const decodedToken = jwtDecode(token);\n  const userId = decodedToken._id;\n  const updateLocalUserAndBalance = newBalance => {\n    const updatedUser = {\n      ...user,\n      walletBalance: newBalance\n    };\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n    updateUser(updatedUser);\n    setWalletBalance(newBalance);\n  };\n  const fetchUnfulfilledDebts = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/debt-postings', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setUnfulfilledDebts(response.data);\n    } catch (error) {\n      console.error('Error fetching unfulfilled debts:', error);\n    }\n  };\n  const fetchDebtsSummary = async () => {\n    try {\n      const debtsOwedResponse = await axios.get(`http://localhost:5000/api/debt-postings/debts-owed-by/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setDebtsOwedByUser(debtsOwedResponse.data);\n      //setDebtsOwedByUserHistory(debtsOwedResponse.data.paidDebts);\n\n      const debtsToReceiveResponse = await axios.get(`http://localhost:5000/api/debt-postings/debts-owed-to/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setDebtsOwedToUser(debtsToReceiveResponse.data);\n      //setDebtsOwedToUserHistory(debtsOwedResponse.data.paidDebts);\n\n      const debtsHistoryResponse = await axios.get(`http://localhost:5000/api/debt-postings/debts-history/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setDebtsHistory(debtsHistoryResponse.data);\n    } catch (error) {\n      console.error('Error fetching debt summaries:', error);\n    }\n  };\n  useEffect(() => {\n    // console.log(\"useEffect running with userId:\", userId); // Confirm useEffect execution\n    // fetchUnfulfilledDebts();\n    // fetchDebtsSummary();\n    // fetchTradableDebts();\n\n    // if (user) {\n    //   setWalletBalance(user.walletBalance);\n    //   // Initialize other user-related states if needed\n    // }\n\n    // Fetch user data from local storage\n    const userData = localStorage.getItem('user');\n    const user = userData ? JSON.parse(userData) : null;\n    fetchUnfulfilledDebts();\n    fetchDebtsSummary();\n    fetchTradableDebts();\n    if (user) {\n      setWalletBalance(user.walletBalance);\n    }\n  }, [token, userId]);\n  const openModal = () => setModalIsOpen(true);\n  const closeModal = () => setModalIsOpen(false);\n  const handleNewPosting = newPosting => {\n    setUnfulfilledDebts([...unfulfilledDebts, newPosting]);\n  };\n\n  //Lend working\n  const handleLendClick = async debtId => {\n    try {\n      const response = await axios.patch(`http://localhost:5000/api/debt-postings/lend/${debtId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      fetchUnfulfilledDebts();\n      fetchDebtsSummary();\n\n      // Update local state to reflect new wallet balance\n      const updatedUser = response.data.user;\n      setWalletBalance(updatedUser.walletBalance);\n      updateLocalUserAndBalance(updatedUser.walletBalance);\n\n      // Refresh data as needed\n      //fetchUnfulfilledDebts();\n      //fetchDebtsSummary();\n    } catch (error) {\n      console.error('Error lending to debt posting:', error);\n    }\n  };\n  const handleLogout = () => {\n    // Clear the authentication data (e.g., remove the token from local storage)\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Call the onLogout prop if it exists to handle any additional cleanup\n    if (onLogout) {\n      onLogout();\n    }\n\n    // Redirect the user to the login page or home page\n    window.location.href = '/login'; // Adjust the URL to your login route\n  };\n\n  //Add to wallet working\n  const handleAddToWallet = async amount => {\n    try {\n      const response = await axios.patch(`http://localhost:5000/api/users/update-wallet/${userId}`, {\n        amount\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setWalletBalance(response.data.walletBalance);\n      updateLocalUserAndBalance(response.data.walletBalance);\n      // setWalletBalance(response.data.walletBalance);\n    } catch (error) {\n      console.error('Error updating wallet balance:', error);\n    }\n  };\n  const fetchWalletBalance = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/wallet-balance/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log(\"Fetched wallet balance:\", response.data.walletBalance); // Confirm response\n      setWalletBalance(response.data.walletBalance);\n      console.log(\"Wallet balance set to:\", response.data.walletBalance); // Confirm state update\n    } catch (error) {\n      console.error('Error fetching wallet balance:', error);\n    }\n  };\n\n  //Pay working\n  const handlePayDebt = async debtId => {\n    try {\n      // Make an API call to mark the debt as paid or initiate the payment process\n      const response = await axios.patch(`http://localhost:5000/api/debt-postings/pay/${debtId}`, {},\n      // Any required data\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const updatedDebtInfo = response.data.debtPosting;\n      const updatedUser = response.data.user;\n      // updateLocalUserAndBalance(updatedUser.walletBalance);\n      //updateLocalUserAndBalance(response.data.walletBalance);\n      // Update debts owed by the user\n      setDebtsOwedByUser(prev => prev.filter(debt => debt._id !== debtId));\n\n      // Update debts owed to the user\n      setDebtsOwedToUser(prev => prev.filter(debt => debt._id !== debtId));\n\n      // Update the history with the paid debt\n      setDebtsHistory(prevHistory => [...prevHistory, updatedDebtInfo]);\n\n      // Update wallet balance\n      setWalletBalance(updatedUser.walletBalance);\n\n      // Refresh the list of debts owed by the user\n      fetchDebtsSummary();\n      updateLocalUserAndBalance(updatedUser.walletBalance);\n    } catch (error) {\n      console.error('Error paying debt:', error);\n    }\n  };\n  const handleOpenTradeModal = debtId => {\n    setSelectedDebtForTrade(debtId);\n    setIsTradeModalOpen(true);\n  };\n  const handleCloseTradeModal = () => {\n    setIsTradeModalOpen(false);\n    setSelectedDebtForTrade(null);\n    setTradePrice('');\n  };\n  const handleTradeDebt = async () => {\n    try {\n      await axios.patch(`http://localhost:5000/api/debt-postings/trade-debt/${selectedDebtForTrade}`, {\n        tradePrice\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      handleCloseTradeModal();\n      fetchDebtsSummary(); // Refresh the debts list\n      fetchTradableDebts();\n      //updateLocalUserAndBalance(response.data.walletBalance);\n    } catch (error) {\n      console.error('Error trading debt:', error);\n    }\n  };\n  const fetchTradableDebts = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/debt-postings/tradable-debts', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setTradableDebts(response.data); // Make sure this line correctly sets the state\n    } catch (error) {\n      console.error('Error fetching tradable debts:', error);\n    }\n  };\n\n  //Buy Working\n  const handleBuyDebt = async (debtId, tradePrice) => {\n    try {\n      const response = await axios.patch(`http://localhost:5000/api/debt-postings/buy-debt/${debtId}`, {},\n      // Additional data can be sent if needed\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setTradableDebts(prevDebts => prevDebts.filter(debt => debt._id !== debtId));\n      // if (response.data.user) {\n      //   setWalletBalance(response.data.user.walletBalance);\n      //   updateLocalUserAndBalance(response.data.user.walletBalance);\n      // }\n\n      setWalletBalance(response.data.buyer.walletBalance);\n      // Refresh other relevant data if necessary\n      fetchTradableDebts();\n      fetchDebtsSummary();\n      if (response.data.buyer) {\n        // setWalletBalance(response.data.buyer.walletBalance);\n        updateLocalUserAndBalance(response.data.buyer.walletBalance);\n      }\n\n      // Update local state to reflect changes\n      // This could involve removing the bought debt from `tradableDebts`\n      // and updating the `walletBalance` if the user's balance is affected\n      // setTradableDebts(prevDebts => prevDebts.filter(debt => debt._id !== debtId));\n      // // if (response.data.user) {\n      // //   setWalletBalance(response.data.user.walletBalance);\n      // //   updateLocalUserAndBalance(response.data.user.walletBalance);\n      // // }\n\n      // // Refresh other relevant data if necessary\n      // fetchTradableDebts();\n      // fetchDebtsSummary();\n    } catch (error) {\n      console.error('Error buying debt:', error);\n    }\n  };\n\n  // Compute debtsPaidByMe and debtsPaidToMe just before the return statement\n  const debtsPaidByMe = debtsHistory.filter(debt => debt.borrower._id === userId);\n  const debtsPaidToMe = debtsHistory.filter(debt => debt.lender._id === userId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      children: \"Post Debt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      children: /*#__PURE__*/_jsxDEV(DebtPostingForm, {\n        token: token,\n        onClose: closeModal,\n        onNewPosting: handleNewPosting,\n        refreshPostings: fetchUnfulfilledDebts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: isTradeModalOpen,\n      onRequestClose: handleCloseTradeModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Set Trade Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: tradePrice,\n        onChange: e => setTradePrice(e.target.value),\n        placeholder: \"Trade Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTradeDebt,\n        children: \"Confirm Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCloseTradeModal,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Wallet Balance: $\", walletBalance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAddToWallet(prompt(\"Enter amount to add:\")),\n      children: \"Add to Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Debts Owed by Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: debtsOwedByUser.map(debt => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.lender.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [debt.interestRate, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handlePayDebt(debt._id),\n              children: \"Pay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 29\n          }, this)]\n        }, debt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Debts Owed to Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: debtsOwedToUser.map(debt => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.borrower.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [debt.interestRate, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleOpenTradeModal(debt._id),\n              children: \"Trade Debt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 29\n          }, this)]\n        }, debt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Unfulfilled Debt Postings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), unfulfilledDebts.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: unfulfilledDebts.map(debt => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.borrower.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [debt.interestRate, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLendClick(debt._id),\n              children: \"Lend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this)]\n        }, debt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No unfulfilled debt postings available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tradable Debt Postings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Borrower\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Trade Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tradableDebts.map(debt => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.borrower.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [debt.interestRate, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.tradePrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleBuyDebt(debt._id),\n              children: \"Buy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this)]\n        }, debt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Debt History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Debts Paid by Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Lender Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: debtsPaidByMe.map(debt => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.lender.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", debt.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [debt.interestRate, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)]\n        }, debt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Debts Paid to Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Borrower Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: debtsPaidToMe.map(debt => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.borrower.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", debt.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [debt.interestRate, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this)]\n        }, debt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"8kP6uIL5KEoXLSDtnYcePtj4lHo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","ReactModal","DebtPostingForm","jwtDecode","jsxDEV","_jsxDEV","Dashboard","token","onLogout","user","updateUser","_s","unfulfilledDebts","setUnfulfilledDebts","modalIsOpen","setModalIsOpen","debtsOwedByUser","setDebtsOwedByUser","debtsOwedToUser","setDebtsOwedToUser","debtsHistory","setDebtsHistory","walletBalance","setWalletBalance","isTradeModalOpen","setIsTradeModalOpen","selectedDebtForTrade","setSelectedDebtForTrade","tradePrice","setTradePrice","tradableDebts","setTradableDebts","decodedToken","userId","_id","updateLocalUserAndBalance","newBalance","updatedUser","localStorage","setItem","JSON","stringify","fetchUnfulfilledDebts","response","get","headers","data","error","console","fetchDebtsSummary","debtsOwedResponse","debtsToReceiveResponse","debtsHistoryResponse","userData","getItem","parse","fetchTradableDebts","openModal","closeModal","handleNewPosting","newPosting","handleLendClick","debtId","patch","handleLogout","removeItem","window","location","href","handleAddToWallet","amount","fetchWalletBalance","log","handlePayDebt","updatedDebtInfo","debtPosting","prev","filter","debt","prevHistory","handleOpenTradeModal","handleCloseTradeModal","handleTradeDebt","handleBuyDebt","prevDebts","buyer","debtsPaidByMe","borrower","debtsPaidToMe","lender","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onRequestClose","onClose","onNewPosting","refreshPostings","type","value","onChange","e","target","placeholder","prompt","map","username","interestRate","length","_c","$RefreshReg$"],"sources":["C:/Users/dvard/OneDrive/Desktop/Winter Projects/p2p/my-p2p-app/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ReactModal from 'react-modal';\r\nimport DebtPostingForm from './DebtPostingForm';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\n\r\n\r\nconst Dashboard = ({ token,onLogout,user,updateUser }) => {\r\n  const [unfulfilledDebts, setUnfulfilledDebts] = useState([]);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [debtsOwedByUser, setDebtsOwedByUser] = useState([]); // Added state\r\n  const [debtsOwedToUser, setDebtsOwedToUser] = useState([]);\r\n  const[debtsHistory,setDebtsHistory]=useState([]);\r\n  const [walletBalance, setWalletBalance] = useState();\r\n  //const [walletBalance2, setWalletBalance2] = useState([]);\r\n\r\n  const [isTradeModalOpen, setIsTradeModalOpen] = useState(false);\r\n  const [selectedDebtForTrade, setSelectedDebtForTrade] = useState(null);\r\n  const [tradePrice, setTradePrice] = useState('');\r\n  const [tradableDebts, setTradableDebts] = useState([]);\r\n \r\n  const decodedToken = jwtDecode(token);\r\n  const userId = decodedToken._id;\r\n\r\n  const updateLocalUserAndBalance = (newBalance) => {\r\n    const updatedUser = { ...user, walletBalance: newBalance };\r\n    localStorage.setItem('user', JSON.stringify(updatedUser));\r\n    updateUser(updatedUser);\r\n    setWalletBalance(newBalance);\r\n  };\r\n  \r\n  const fetchUnfulfilledDebts = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/debt-postings', {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n      setUnfulfilledDebts(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching unfulfilled debts:', error);\r\n    }\r\n  };\r\n\r\n  const fetchDebtsSummary = async () => {\r\n    try {\r\n        const debtsOwedResponse = await axios.get(`http://localhost:5000/api/debt-postings/debts-owed-by/${userId}`, {\r\n            headers: { 'Authorization': `Bearer ${token}` }\r\n        });\r\n        setDebtsOwedByUser(debtsOwedResponse.data);\r\n        //setDebtsOwedByUserHistory(debtsOwedResponse.data.paidDebts);\r\n  \r\n        const debtsToReceiveResponse = await axios.get(`http://localhost:5000/api/debt-postings/debts-owed-to/${userId}`, {\r\n            headers: { 'Authorization': `Bearer ${token}` }\r\n        });\r\n        setDebtsOwedToUser(debtsToReceiveResponse.data);\r\n        //setDebtsOwedToUserHistory(debtsOwedResponse.data.paidDebts);\r\n\r\n        const debtsHistoryResponse = await axios.get(`http://localhost:5000/api/debt-postings/debts-history/${userId}`, { headers: { 'Authorization': `Bearer ${token}` } });\r\n        setDebtsHistory(debtsHistoryResponse.data);\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching debt summaries:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    // console.log(\"useEffect running with userId:\", userId); // Confirm useEffect execution\r\n    // fetchUnfulfilledDebts();\r\n    // fetchDebtsSummary();\r\n    // fetchTradableDebts();\r\n    \r\n    // if (user) {\r\n    //   setWalletBalance(user.walletBalance);\r\n    //   // Initialize other user-related states if needed\r\n    // }\r\n\r\n     // Fetch user data from local storage\r\n     const userData = localStorage.getItem('user');\r\n     const user = userData ? JSON.parse(userData) : null;\r\n \r\n     fetchUnfulfilledDebts();\r\n     fetchDebtsSummary();\r\n     fetchTradableDebts();\r\n \r\n     if (user) {\r\n       setWalletBalance(user.walletBalance);\r\n     }\r\n  }, [token,userId]);\r\n\r\n  \r\n  const openModal = () => setModalIsOpen(true);\r\n  const closeModal = () => setModalIsOpen(false);\r\n\r\n  const handleNewPosting = (newPosting) => {\r\n    setUnfulfilledDebts([...unfulfilledDebts, newPosting]);\r\n  };\r\n\r\n//Lend working\r\n  const handleLendClick = async (debtId) => {\r\n    try {\r\n      const response = await axios.patch(`http://localhost:5000/api/debt-postings/lend/${debtId}`, \r\n        {}, \r\n        { headers: { 'Authorization': `Bearer ${token}` } }\r\n      );\r\n\r\n      fetchUnfulfilledDebts();\r\n      fetchDebtsSummary();\r\n  \r\n      // Update local state to reflect new wallet balance\r\n      const updatedUser = response.data.user;\r\n      setWalletBalance(updatedUser.walletBalance);\r\n      updateLocalUserAndBalance(updatedUser.walletBalance);\r\n\r\n      // Refresh data as needed\r\n      //fetchUnfulfilledDebts();\r\n      //fetchDebtsSummary();\r\n    } catch (error) {\r\n      console.error('Error lending to debt posting:', error);\r\n    }\r\n  };\r\n  \r\n  const handleLogout = () => {\r\n    // Clear the authentication data (e.g., remove the token from local storage)\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n\r\n    // Call the onLogout prop if it exists to handle any additional cleanup\r\n    if (onLogout) {\r\n      onLogout();\r\n    }\r\n\r\n    // Redirect the user to the login page or home page\r\n    window.location.href = '/login'; // Adjust the URL to your login route\r\n  };\r\n\r\n  //Add to wallet working\r\n  const handleAddToWallet = async (amount) => {\r\n    try {\r\n      const response = await axios.patch(`http://localhost:5000/api/users/update-wallet/${userId}`, \r\n        { amount },\r\n        { headers: { 'Authorization': `Bearer ${token}` } }\r\n      );\r\n      setWalletBalance(response.data.walletBalance);\r\n      updateLocalUserAndBalance(response.data.walletBalance);\r\n      // setWalletBalance(response.data.walletBalance);\r\n    } catch (error) {\r\n      console.error('Error updating wallet balance:', error);\r\n    }\r\n  };\r\n  \r\n  const fetchWalletBalance = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/wallet-balance/${userId}`, {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n      console.log(\"Fetched wallet balance:\", response.data.walletBalance); // Confirm response\r\n      setWalletBalance(response.data.walletBalance);\r\n      console.log(\"Wallet balance set to:\", response.data.walletBalance); // Confirm state update\r\n    } catch (error) {\r\n      console.error('Error fetching wallet balance:', error);\r\n    }\r\n  };\r\n\r\n  //Pay working\r\n  const handlePayDebt = async (debtId) => {\r\n    try {\r\n      // Make an API call to mark the debt as paid or initiate the payment process\r\n      const response = await axios.patch(`http://localhost:5000/api/debt-postings/pay/${debtId}`, \r\n        {}, // Any required data\r\n        { headers: { 'Authorization': `Bearer ${token}` } }\r\n      );\r\n  \r\n      const updatedDebtInfo = response.data.debtPosting;\r\n      const updatedUser = response.data.user;\r\n      // updateLocalUserAndBalance(updatedUser.walletBalance);\r\n      //updateLocalUserAndBalance(response.data.walletBalance);\r\n      // Update debts owed by the user\r\n      setDebtsOwedByUser(prev => prev.filter(debt => debt._id !== debtId));\r\n  \r\n      // Update debts owed to the user\r\n      setDebtsOwedToUser(prev => prev.filter(debt => debt._id !== debtId));\r\n  \r\n      // Update the history with the paid debt\r\n      setDebtsHistory(prevHistory => [...prevHistory, updatedDebtInfo]);\r\n  \r\n      // Update wallet balance\r\n      setWalletBalance(updatedUser.walletBalance);\r\n  \r\n      // Refresh the list of debts owed by the user\r\n      fetchDebtsSummary();\r\n\r\n      updateLocalUserAndBalance(updatedUser.walletBalance);\r\n    } catch (error) {\r\n      console.error('Error paying debt:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleOpenTradeModal = (debtId) => {\r\n    setSelectedDebtForTrade(debtId);\r\n    setIsTradeModalOpen(true);\r\n  };\r\n\r\n  const handleCloseTradeModal = () => {\r\n    setIsTradeModalOpen(false);\r\n    setSelectedDebtForTrade(null);\r\n    setTradePrice('');\r\n  };\r\n\r\n  const handleTradeDebt = async () => {\r\n    try {\r\n      await axios.patch(`http://localhost:5000/api/debt-postings/trade-debt/${selectedDebtForTrade}`, \r\n        { tradePrice }, \r\n        { headers: { 'Authorization': `Bearer ${token}` } }\r\n      );\r\n      handleCloseTradeModal();\r\n      fetchDebtsSummary(); // Refresh the debts list\r\n      fetchTradableDebts();\r\n      //updateLocalUserAndBalance(response.data.walletBalance);\r\n    } catch (error) {\r\n      console.error('Error trading debt:', error);\r\n    }\r\n  };\r\n\r\n  const fetchTradableDebts = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/debt-postings/tradable-debts', {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n      setTradableDebts(response.data); // Make sure this line correctly sets the state\r\n    } catch (error) {\r\n      console.error('Error fetching tradable debts:', error);\r\n    }\r\n  };\r\n\r\n  //Buy Working\r\n  const handleBuyDebt = async (debtId, tradePrice) => {\r\n    try {\r\n      const response = await axios.patch(\r\n        `http://localhost:5000/api/debt-postings/buy-debt/${debtId}`,\r\n        {},  // Additional data can be sent if needed\r\n        { headers: { 'Authorization': `Bearer ${token}` } }\r\n      );\r\n\r\n\r\n      setTradableDebts(prevDebts => prevDebts.filter(debt => debt._id !== debtId));\r\n      // if (response.data.user) {\r\n      //   setWalletBalance(response.data.user.walletBalance);\r\n      //   updateLocalUserAndBalance(response.data.user.walletBalance);\r\n      // }\r\n\r\n      setWalletBalance(response.data.buyer.walletBalance);\r\n      // Refresh other relevant data if necessary\r\n      fetchTradableDebts();\r\n      fetchDebtsSummary();\r\n\r\n      if (response.data.buyer) {\r\n        // setWalletBalance(response.data.buyer.walletBalance);\r\n        updateLocalUserAndBalance(response.data.buyer.walletBalance);\r\n      }\r\n\r\n      // Update local state to reflect changes\r\n      // This could involve removing the bought debt from `tradableDebts`\r\n      // and updating the `walletBalance` if the user's balance is affected\r\n      // setTradableDebts(prevDebts => prevDebts.filter(debt => debt._id !== debtId));\r\n      // // if (response.data.user) {\r\n      // //   setWalletBalance(response.data.user.walletBalance);\r\n      // //   updateLocalUserAndBalance(response.data.user.walletBalance);\r\n      // // }\r\n\r\n      // // Refresh other relevant data if necessary\r\n      // fetchTradableDebts();\r\n      // fetchDebtsSummary();\r\n    } catch (error) {\r\n      console.error('Error buying debt:', error);\r\n    }\r\n  };\r\n\r\n\r\n   // Compute debtsPaidByMe and debtsPaidToMe just before the return statement\r\n   const debtsPaidByMe = debtsHistory.filter(debt => debt.borrower._id === userId);\r\n   const debtsPaidToMe = debtsHistory.filter(debt => debt.lender._id === userId);\r\n  return (\r\n    <div>\r\n      <h2>Dashboard</h2>\r\n      \r\n      <button onClick={openModal}>Post Debt</button>\r\n      <ReactModal isOpen={modalIsOpen} onRequestClose={closeModal}>\r\n        <DebtPostingForm token={token} onClose={closeModal} onNewPosting={handleNewPosting} refreshPostings={fetchUnfulfilledDebts} />\r\n      </ReactModal>\r\n\r\n      <ReactModal isOpen={isTradeModalOpen} onRequestClose={handleCloseTradeModal}>\r\n        <h4>Set Trade Price</h4>\r\n        <input\r\n          type=\"number\"\r\n          value={tradePrice}\r\n          onChange={(e) => setTradePrice(e.target.value)}\r\n          placeholder=\"Trade Price\"\r\n        />\r\n        <button onClick={handleTradeDebt}>Confirm Trade</button>\r\n        <button onClick={handleCloseTradeModal}>Cancel</button>\r\n      </ReactModal>\r\n\r\n\r\n      <button onClick={handleLogout}>Logout</button>\r\n      <h3>Wallet Balance: ${walletBalance}</h3>\r\n      <button onClick={() => handleAddToWallet(prompt(\"Enter amount to add:\"))}>Add to Wallet</button>\r\n      <h3>Debts Owed by Me</h3>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Amount</th>\r\n                        <th>Interest Rate</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {debtsOwedByUser.map(debt => (\r\n                        <tr key={debt._id}>\r\n                            <td>{debt.lender.username}</td> {/* Adjust as per your data structure */}\r\n                            <td>{debt.amount}</td>\r\n                            <td>{debt.interestRate}%</td>\r\n                            <td>\r\n                              <button onClick={() => handlePayDebt(debt._id)}>Pay</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <h3>Debts Owed to Me</h3>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Amount</th>\r\n                        <th>Interest Rate</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {debtsOwedToUser.map(debt => (\r\n                        <tr key={debt._id}>\r\n                            <td>{debt.borrower.username}</td> {/* Adjust as per your data structure */}\r\n                            <td>{debt.amount}</td>\r\n                            <td>{debt.interestRate}%</td>\r\n                            <td>\r\n                              <button onClick={() => handleOpenTradeModal(debt._id)}>Trade Debt</button>\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            \r\n      \r\n      <h3>Unfulfilled Debt Postings</h3>\r\n      {unfulfilledDebts.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Amount</th>\r\n              <th>Interest Rate</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {unfulfilledDebts.map(debt => (\r\n              <tr key={debt._id}>\r\n                <td>{debt.borrower.username}</td>\r\n                <td>{debt.amount}</td>\r\n                <td>{debt.interestRate}%</td>\r\n                <td>\r\n                  <button onClick={() => handleLendClick(debt._id)}>Lend</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No unfulfilled debt postings available.</p>\r\n      )}\r\n\r\n<h3>Tradable Debt Postings</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Borrower</th>\r\n            <th>Amount</th>\r\n            <th>Interest Rate</th>\r\n            <th>Trade Price</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tradableDebts.map(debt => (\r\n            <tr key={debt._id}>\r\n              <td>{debt.borrower.username}</td>\r\n              <td>{debt.amount}</td>\r\n              <td>{debt.interestRate}%</td>\r\n              <td>{debt.tradePrice}</td>\r\n              <td>\r\n                <button onClick={() => handleBuyDebt(debt._id)}>Buy</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n         </tbody>\r\n      </table>\r\n\r\n<h3>Debt History</h3>\r\n      \r\n      <h4>Debts Paid by Me</h4>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Lender Name</th>\r\n            <th>Amount</th>\r\n            <th>Interest Rate</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {debtsPaidByMe.map(debt => (\r\n            <tr key={debt._id}>\r\n              <td>{debt.lender.username}</td>\r\n              <td>${debt.amount}</td>\r\n              <td>{debt.interestRate}%</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h4>Debts Paid to Me</h4>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Borrower Name</th>\r\n            <th>Amount</th>\r\n            <th>Interest Rate</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {debtsPaidToMe.map(debt => (\r\n            <tr key={debt._id}>\r\n              <td>{debt.borrower.username}</td>\r\n              <td>${debt.amount}</td>\r\n              <td>{debt.interestRate}%</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    \r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}