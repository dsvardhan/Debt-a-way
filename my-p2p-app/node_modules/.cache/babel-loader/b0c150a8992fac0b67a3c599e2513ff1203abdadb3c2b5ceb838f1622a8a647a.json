{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dvard\\\\OneDrive\\\\Desktop\\\\Winter Projects\\\\p2p\\\\my-p2p-app\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import ReactModal from 'react-modal';\n// import DebtPostingForm from './DebtPostingForm';\n\n// const Dashboard = ({ token }) => {\n//   const [debts, setDebts] = useState([]);\n\n//   const [modalIsOpen, setModalIsOpen] = useState(false);\n\n//   // Function to fetch debts (same as before)\n\n//   const openModal = () => setModalIsOpen(true);\n//   const closeModal = () => setModalIsOpen(false);\n\n//   const handleNewPosting = (newPosting) => {\n//     setDebts([...debts, newPosting]);\n//   };\n\n//   useEffect(() => {\n//     const fetchDebts = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/debt-postings', {\n//           headers: { 'Authorization': `Bearer ${token}` }\n//         });\n//         setDebts(response.data);\n//       } catch (error) {\n//         console.error('Error fetching debts:', error);\n//       }\n//     };\n\n//     fetchDebts();\n//   }, [token]);\n\n//   return (\n//     <div>\n//       <button onClick={openModal}>Debt Posting</button>\n//       <ReactModal isOpen={modalIsOpen} onRequestClose={closeModal}>\n//         <DebtPostingForm token={token} onClose={closeModal} onNewPosting={handleNewPosting} />\n//       </ReactModal>\n//       {/* Displaying debts... */}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactModal from 'react-modal';\nimport DebtPostingForm from './DebtPostingForm'; // Ensure this component is correctly implemented\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  token\n}) => {\n  _s();\n  const [unfulfilledDebts, setUnfulfilledDebts] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  useEffect(() => {\n    const fetchUnfulfilledDebts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/debt-postings', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setUnfulfilledDebts(response.data);\n      } catch (error) {\n        console.error('Error fetching unfulfilled debts:', error);\n      }\n    };\n    fetchUnfulfilledDebts();\n  }, [token]); // Dependency array to ensure the effect runs when the token changes\n\n  const openModal = () => setModalIsOpen(true);\n  const closeModal = () => setModalIsOpen(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      children: \"Post Debt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      children: /*#__PURE__*/_jsxDEV(DebtPostingForm, {\n        token: token,\n        onClose: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Unfulfilled Debt Postings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), unfulfilledDebts.length > 0 ? unfulfilledDebts.map(debt => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Amount: \", debt.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Interest Rate: \", debt.interestRate, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Borrower: \", debt.borrower.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), \" \"]\n    }, debt._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No unfulfilled debt postings available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"mNc31FZpyG0QTJ538yn1Q/ZUYbk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","ReactModal","DebtPostingForm","jsxDEV","_jsxDEV","Dashboard","token","_s","unfulfilledDebts","setUnfulfilledDebts","modalIsOpen","setModalIsOpen","fetchUnfulfilledDebts","response","get","headers","data","error","console","openModal","closeModal","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onRequestClose","onClose","length","map","debt","amount","interestRate","borrower","username","_id","_c","$RefreshReg$"],"sources":["C:/Users/dvard/OneDrive/Desktop/Winter Projects/p2p/my-p2p-app/src/Dashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import ReactModal from 'react-modal';\r\n// import DebtPostingForm from './DebtPostingForm';\r\n\r\n// const Dashboard = ({ token }) => {\r\n//   const [debts, setDebts] = useState([]);\r\n\r\n//   const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n//   // Function to fetch debts (same as before)\r\n\r\n//   const openModal = () => setModalIsOpen(true);\r\n//   const closeModal = () => setModalIsOpen(false);\r\n\r\n//   const handleNewPosting = (newPosting) => {\r\n//     setDebts([...debts, newPosting]);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const fetchDebts = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/api/debt-postings', {\r\n//           headers: { 'Authorization': `Bearer ${token}` }\r\n//         });\r\n//         setDebts(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching debts:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchDebts();\r\n//   }, [token]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <button onClick={openModal}>Debt Posting</button>\r\n//       <ReactModal isOpen={modalIsOpen} onRequestClose={closeModal}>\r\n//         <DebtPostingForm token={token} onClose={closeModal} onNewPosting={handleNewPosting} />\r\n//       </ReactModal>\r\n//       {/* Displaying debts... */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ReactModal from 'react-modal';\r\nimport DebtPostingForm from './DebtPostingForm'; // Ensure this component is correctly implemented\r\n\r\nconst Dashboard = ({ token }) => {\r\n  const [unfulfilledDebts, setUnfulfilledDebts] = useState([]);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchUnfulfilledDebts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/debt-postings', {\r\n          headers: { 'Authorization': `Bearer ${token}` }\r\n        });\r\n        setUnfulfilledDebts(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching unfulfilled debts:', error);\r\n      }\r\n    };\r\n\r\n    fetchUnfulfilledDebts();\r\n  }, [token]); // Dependency array to ensure the effect runs when the token changes\r\n\r\n  const openModal = () => setModalIsOpen(true);\r\n  const closeModal = () => setModalIsOpen(false);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Dashboard</h2>\r\n      \r\n      <button onClick={openModal}>Post Debt</button>\r\n      <ReactModal isOpen={modalIsOpen} onRequestClose={closeModal}>\r\n        <DebtPostingForm token={token} onClose={closeModal} />\r\n      </ReactModal>\r\n\r\n      <h3>Unfulfilled Debt Postings</h3>\r\n      {unfulfilledDebts.length > 0 ? (\r\n        unfulfilledDebts.map(debt => (\r\n          <div key={debt._id}>\r\n            <p>Amount: {debt.amount}</p>\r\n            <p>Interest Rate: {debt.interestRate}%</p>\r\n            <p>Borrower: {debt.borrower.username}</p> {/* Display the borrower's name */}\r\n            {/* Add more details here */}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No unfulfilled debt postings available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}