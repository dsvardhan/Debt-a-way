{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dvard\\\\OneDrive\\\\Desktop\\\\Winter Projects\\\\p2p\\\\my-p2p-app\\\\src\\\\Dashboard.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactModal from 'react-modal';\nimport DebtPostingForm from './DebtPostingForm';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  token,\n  onLogout,\n  user\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [unfulfilledDebts, setUnfulfilledDebts] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [debtsOwedByUser, setDebtsOwedByUser] = useState([]); // Added state\n  const [debtsOwedToUser, setDebtsOwedToUser] = useState([]);\n  const [debtsHistory, setDebtsHistory] = useState([]);\n  const [walletBalance, setWalletBalance] = useState();\n  const [debtsAvailableForTrade, setDebtsAvailableForTrade] = useState([]);\n  const [isTradeModalOpen, setIsTradeModalOpen] = useState(false);\n  const [selectedDebtForTrade, setSelectedDebtForTrade] = useState(null);\n  const [tradePrice, setTradePrice] = useState('');\n  const decodedToken = jwtDecode(token);\n  const userId = decodedToken._id;\n  const fetchDebtsAvailableForTrade = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/debt-postings/debts-for-trade', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setDebtsAvailableForTrade(response.data);\n    } catch (error) {\n      console.error('Error fetching debts available for trade:', error);\n    }\n  };\n  const handleInitiateTrade = async debtId => {\n    try {\n      // Add logic to initiate trade\n      console.log(`Initiating trade for debt ID: ${debtId}`);\n      // Call the backend endpoint to initiate the trade\n      // Update the state accordingly\n    } catch (error) {\n      console.error('Error initiating trade:', error);\n    }\n  };\n  const fetchUnfulfilledDebts = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/debt-postings', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setUnfulfilledDebts(response.data);\n    } catch (error) {\n      console.error('Error fetching unfulfilled debts:', error);\n    }\n  };\n  const fetchDebtsSummary = async () => {\n    try {\n      const debtsOwedResponse = await axios.get(`http://localhost:5000/api/debt-postings/debts-owed-by/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setDebtsOwedByUser(debtsOwedResponse.data);\n      //setDebtsOwedByUserHistory(debtsOwedResponse.data.paidDebts);\n\n      const debtsToReceiveResponse = await axios.get(`http://localhost:5000/api/debt-postings/debts-owed-to/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setDebtsOwedToUser(debtsToReceiveResponse.data);\n      //setDebtsOwedToUserHistory(debtsOwedResponse.data.paidDebts);\n\n      const debtsHistoryResponse = await axios.get(`http://localhost:5000/api/debt-postings/debts-history/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setDebtsHistory(debtsHistoryResponse.data);\n    } catch (error) {\n      console.error('Error fetching debt summaries:', error);\n    }\n  };\n  useEffect(() => {\n    console.log(\"useEffect running with userId:\", userId); // Confirm useEffect execution\n    fetchUnfulfilledDebts();\n    fetchDebtsSummary();\n    if (user) {\n      setWalletBalance(user.walletBalance);\n      // Initialize other user-related states if needed\n    }\n    fetchDebtsAvailableForTrade();\n  }, [token, userId, user]);\n  const openModal = () => setModalIsOpen(true);\n  const closeModal = () => setModalIsOpen(false);\n  const handleNewPosting = newPosting => {\n    setUnfulfilledDebts([...unfulfilledDebts, newPosting]);\n  };\n  const handleLendClick = async debtId => {\n    try {\n      const response = await axios.patch(`http://localhost:5000/api/debt-postings/lend/${debtId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      // Update local state to reflect new wallet balance\n      const updatedUser = response.data.user;\n      setWalletBalance(updatedUser.walletBalance);\n\n      // Refresh data as needed\n      fetchUnfulfilledDebts();\n      fetchDebtsSummary();\n    } catch (error) {\n      console.error('Error lending to debt posting:', error);\n    }\n  };\n  const handleLogout = () => {\n    // Clear the authentication data (e.g., remove the token from local storage)\n    localStorage.removeItem('token');\n\n    // Call the onLogout prop if it exists to handle any additional cleanup\n    if (onLogout) {\n      onLogout();\n    }\n\n    // Redirect the user to the login page or home page\n    window.location.href = '/login'; // Adjust the URL to your login route\n  };\n  const handleAddToWallet = async amount => {\n    try {\n      const response = await axios.patch(`http://localhost:5000/api/users/update-wallet/${userId}`, {\n        amount\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setWalletBalance(response.data.walletBalance);\n    } catch (error) {\n      console.error('Error updating wallet balance:', error);\n    }\n  };\n  const fetchWalletBalance = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/wallet-balance/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log(\"Fetched wallet balance:\", response.data.walletBalance); // Confirm response\n      setWalletBalance(response.data.walletBalance);\n      console.log(\"Wallet balance set to:\", response.data.walletBalance); // Confirm state update\n    } catch (error) {\n      console.error('Error fetching wallet balance:', error);\n    }\n  };\n  const handlePayDebt = async debtId => {\n    try {\n      // Make an API call to mark the debt as paid or initiate the payment process\n      const response = await axios.patch(`http://localhost:5000/api/debt-postings/pay/${debtId}`, {},\n      // Any required data\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const updatedDebtInfo = response.data.debtPosting;\n      const updatedUser = response.data.user;\n\n      // Update debts owed by the user\n      setDebtsOwedByUser(prev => prev.filter(debt => debt._id !== debtId));\n\n      // Update debts owed to the user\n      setDebtsOwedToUser(prev => prev.filter(debt => debt._id !== debtId));\n\n      // Update the history with the paid debt\n      setDebtsHistory(prevHistory => [...prevHistory, updatedDebtInfo]);\n\n      // Update wallet balance\n      setWalletBalance(updatedUser.walletBalance);\n\n      // Refresh the list of debts owed by the user\n      fetchDebtsSummary();\n    } catch (error) {\n      console.error('Error paying debt:', error);\n    }\n  };\n  const openTradeModal = debt => {\n    setSelectedDebtForTrade(debt);\n    setIsTradeModalOpen(true);\n  };\n  const handleTradeSubmit = async tradePrice => {\n    if (selectedDebtForTrade) {\n      try {\n        await axios.patch(`http://localhost:5000/api/debt-postings/set-debt-for-trade/${selectedDebtForTrade._id}`, {\n          tradePrice\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setIsTradeModalOpen(false);\n        // Refresh your debts list to reflect the change\n        fetchDebtsSummary();\n        fetchDebtsAvailableForTrade();\n      } catch (error) {\n        console.error('Error setting debt for trade:', error);\n      }\n    }\n  };\n  const TradeModal = ({\n    isOpen,\n    onRequestClose,\n    onSubmit\n  }) => {\n    _s();\n    const [price, setPrice] = useState('');\n    const handleSubmit = () => {\n      onSubmit(price);\n      setPrice('');\n    };\n    return /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: isOpen,\n      onRequestClose: onRequestClose,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set Trade Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: price,\n        onChange: e => setPrice(e.target.value),\n        placeholder: \"Enter price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRequestClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Compute debtsPaidByMe and debtsPaidToMe just before the return statement\n  _s(TradeModal, \"LxO4COykSxjSWuim4Q7Ko4v0qIE=\");\n  const debtsPaidByMe = debtsHistory.filter(debt => debt.borrower._id === userId);\n  const debtsPaidToMe = debtsHistory.filter(debt => debt.lender._id === userId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      children: \"Post Debt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      children: /*#__PURE__*/_jsxDEV(DebtPostingForm, {\n        token: token,\n        onClose: closeModal,\n        onNewPosting: handleNewPosting,\n        refreshPostings: fetchUnfulfilledDebts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Wallet Balance: $\", walletBalance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAddToWallet(prompt(\"Enter amount to add:\")),\n      children: \"Add to Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Debts Owed by Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: debtsOwedByUser.map(debt => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.lender.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [debt.interestRate, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handlePayDebt(debt._id),\n              children: \"Pay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this)]\n        }, debt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Debts Owed to Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: debtsOwedToUser.map(debt => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.borrower.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [debt.interestRate, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openTradeModal(debt),\n              children: \"Trade Debt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this)]\n        }, debt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TradeModal, {\n      isOpen: isTradeModalOpen,\n      onRequestClose: () => setIsTradeModalOpen(false),\n      onSubmit: handleTradeSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Unfulfilled Debt Postings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), unfulfilledDebts.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: unfulfilledDebts.map(debt => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.borrower.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [debt.interestRate, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLendClick(debt._id),\n              children: \"Lend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this)]\n        }, debt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No unfulfilled debt postings available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Debts Available for Trade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Borrower Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Trade Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: debtsAvailableForTrade.map(debt => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.borrower.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", debt.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [debt.interestRate, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", debt.tradePrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleInitiateTrade(debt._id),\n              children: \"Initiate Trade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)]\n        }, debt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Debt History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Debts Paid by Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Lender Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: debtsPaidByMe.map(debt => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.lender.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", debt.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [debt.interestRate, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, debt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Debts Paid to Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Borrower Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: debtsPaidToMe.map(debt => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: debt.borrower.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", debt.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [debt.interestRate, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this)]\n        }, debt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n_s2(Dashboard, \"Fswim37DOOH9rt+zspltwKRTKr0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","ReactModal","DebtPostingForm","jwtDecode","jsxDEV","_jsxDEV","Dashboard","token","onLogout","user","_s2","_s","$RefreshSig$","unfulfilledDebts","setUnfulfilledDebts","modalIsOpen","setModalIsOpen","debtsOwedByUser","setDebtsOwedByUser","debtsOwedToUser","setDebtsOwedToUser","debtsHistory","setDebtsHistory","walletBalance","setWalletBalance","debtsAvailableForTrade","setDebtsAvailableForTrade","isTradeModalOpen","setIsTradeModalOpen","selectedDebtForTrade","setSelectedDebtForTrade","tradePrice","setTradePrice","decodedToken","userId","_id","fetchDebtsAvailableForTrade","response","get","headers","data","error","console","handleInitiateTrade","debtId","log","fetchUnfulfilledDebts","fetchDebtsSummary","debtsOwedResponse","debtsToReceiveResponse","debtsHistoryResponse","openModal","closeModal","handleNewPosting","newPosting","handleLendClick","patch","updatedUser","handleLogout","localStorage","removeItem","window","location","href","handleAddToWallet","amount","fetchWalletBalance","handlePayDebt","updatedDebtInfo","debtPosting","prev","filter","debt","prevHistory","openTradeModal","handleTradeSubmit","TradeModal","isOpen","onRequestClose","onSubmit","price","setPrice","handleSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","debtsPaidByMe","borrower","debtsPaidToMe","lender","onClose","onNewPosting","refreshPostings","prompt","map","username","interestRate","length","_c","$RefreshReg$"],"sources":["C:/Users/dvard/OneDrive/Desktop/Winter Projects/p2p/my-p2p-app/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ReactModal from 'react-modal';\r\nimport DebtPostingForm from './DebtPostingForm';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\n\r\n\r\nconst Dashboard = ({ token,onLogout,user }) => {\r\n  const [unfulfilledDebts, setUnfulfilledDebts] = useState([]);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [debtsOwedByUser, setDebtsOwedByUser] = useState([]); // Added state\r\n  const [debtsOwedToUser, setDebtsOwedToUser] = useState([]);\r\n  const[debtsHistory,setDebtsHistory]=useState([]);\r\n  const [walletBalance, setWalletBalance] = useState();\r\n  const [debtsAvailableForTrade, setDebtsAvailableForTrade] = useState([]);\r\n  const [isTradeModalOpen, setIsTradeModalOpen] = useState(false);\r\n  const [selectedDebtForTrade, setSelectedDebtForTrade] = useState(null);\r\n  const [tradePrice, setTradePrice] = useState('');\r\n \r\n  const decodedToken = jwtDecode(token);\r\n  const userId = decodedToken._id;\r\n\r\n  const fetchDebtsAvailableForTrade = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/debt-postings/debts-for-trade', {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n      setDebtsAvailableForTrade(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching debts available for trade:', error);\r\n    }\r\n  };\r\n\r\n  const handleInitiateTrade = async (debtId) => {\r\n    try {\r\n      // Add logic to initiate trade\r\n      console.log(`Initiating trade for debt ID: ${debtId}`);\r\n      // Call the backend endpoint to initiate the trade\r\n      // Update the state accordingly\r\n    } catch (error) {\r\n      console.error('Error initiating trade:', error);\r\n    }\r\n  };\r\n  \r\n  const fetchUnfulfilledDebts = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/debt-postings', {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n      setUnfulfilledDebts(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching unfulfilled debts:', error);\r\n    }\r\n  };\r\n\r\n  const fetchDebtsSummary = async () => {\r\n    try {\r\n        const debtsOwedResponse = await axios.get(`http://localhost:5000/api/debt-postings/debts-owed-by/${userId}`, {\r\n            headers: { 'Authorization': `Bearer ${token}` }\r\n        });\r\n        setDebtsOwedByUser(debtsOwedResponse.data);\r\n        //setDebtsOwedByUserHistory(debtsOwedResponse.data.paidDebts);\r\n  \r\n        const debtsToReceiveResponse = await axios.get(`http://localhost:5000/api/debt-postings/debts-owed-to/${userId}`, {\r\n            headers: { 'Authorization': `Bearer ${token}` }\r\n        });\r\n        setDebtsOwedToUser(debtsToReceiveResponse.data);\r\n        //setDebtsOwedToUserHistory(debtsOwedResponse.data.paidDebts);\r\n\r\n        const debtsHistoryResponse = await axios.get(`http://localhost:5000/api/debt-postings/debts-history/${userId}`, { headers: { 'Authorization': `Bearer ${token}` } });\r\n        setDebtsHistory(debtsHistoryResponse.data);\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching debt summaries:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect running with userId:\", userId); // Confirm useEffect execution\r\n    fetchUnfulfilledDebts();\r\n    fetchDebtsSummary();\r\n    \r\n    if (user) {\r\n      setWalletBalance(user.walletBalance);\r\n      // Initialize other user-related states if needed\r\n    }\r\n    fetchDebtsAvailableForTrade();\r\n  }, [token,userId,user]);\r\n\r\n  \r\n  const openModal = () => setModalIsOpen(true);\r\n  const closeModal = () => setModalIsOpen(false);\r\n\r\n  const handleNewPosting = (newPosting) => {\r\n    setUnfulfilledDebts([...unfulfilledDebts, newPosting]);\r\n  };\r\n\r\n\r\n  const handleLendClick = async (debtId) => {\r\n    try {\r\n      const response = await axios.patch(`http://localhost:5000/api/debt-postings/lend/${debtId}`, \r\n        {}, \r\n        { headers: { 'Authorization': `Bearer ${token}` } }\r\n      );\r\n  \r\n      // Update local state to reflect new wallet balance\r\n      const updatedUser = response.data.user;\r\n      setWalletBalance(updatedUser.walletBalance);\r\n  \r\n      // Refresh data as needed\r\n      fetchUnfulfilledDebts();\r\n      fetchDebtsSummary();\r\n    } catch (error) {\r\n      console.error('Error lending to debt posting:', error);\r\n    }\r\n  };\r\n  \r\n  const handleLogout = () => {\r\n    // Clear the authentication data (e.g., remove the token from local storage)\r\n    localStorage.removeItem('token');\r\n\r\n    // Call the onLogout prop if it exists to handle any additional cleanup\r\n    if (onLogout) {\r\n      onLogout();\r\n    }\r\n\r\n    // Redirect the user to the login page or home page\r\n    window.location.href = '/login'; // Adjust the URL to your login route\r\n  };\r\n\r\n  const handleAddToWallet = async (amount) => {\r\n    try {\r\n      const response = await axios.patch(`http://localhost:5000/api/users/update-wallet/${userId}`, \r\n        { amount },\r\n        { headers: { 'Authorization': `Bearer ${token}` } }\r\n      );\r\n      setWalletBalance(response.data.walletBalance);\r\n    } catch (error) {\r\n      console.error('Error updating wallet balance:', error);\r\n    }\r\n  };\r\n  \r\n  const fetchWalletBalance = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/wallet-balance/${userId}`, {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n      console.log(\"Fetched wallet balance:\", response.data.walletBalance); // Confirm response\r\n      setWalletBalance(response.data.walletBalance);\r\n      console.log(\"Wallet balance set to:\", response.data.walletBalance); // Confirm state update\r\n    } catch (error) {\r\n      console.error('Error fetching wallet balance:', error);\r\n    }\r\n  };\r\n\r\n  const handlePayDebt = async (debtId) => {\r\n    try {\r\n      // Make an API call to mark the debt as paid or initiate the payment process\r\n      const response = await axios.patch(`http://localhost:5000/api/debt-postings/pay/${debtId}`, \r\n        {}, // Any required data\r\n        { headers: { 'Authorization': `Bearer ${token}` } }\r\n      );\r\n  \r\n      const updatedDebtInfo = response.data.debtPosting;\r\n      const updatedUser = response.data.user;\r\n  \r\n      // Update debts owed by the user\r\n      setDebtsOwedByUser(prev => prev.filter(debt => debt._id !== debtId));\r\n  \r\n      // Update debts owed to the user\r\n      setDebtsOwedToUser(prev => prev.filter(debt => debt._id !== debtId));\r\n  \r\n      // Update the history with the paid debt\r\n      setDebtsHistory(prevHistory => [...prevHistory, updatedDebtInfo]);\r\n  \r\n      // Update wallet balance\r\n      setWalletBalance(updatedUser.walletBalance);\r\n  \r\n      // Refresh the list of debts owed by the user\r\n      fetchDebtsSummary();\r\n    } catch (error) {\r\n      console.error('Error paying debt:', error);\r\n    }\r\n  };\r\n  \r\n  const openTradeModal = (debt) => {\r\n    setSelectedDebtForTrade(debt);\r\n    setIsTradeModalOpen(true);\r\n  };\r\n  \r\n\r\n  const handleTradeSubmit = async (tradePrice) => {\r\n    if (selectedDebtForTrade) {\r\n      try {\r\n        await axios.patch(`http://localhost:5000/api/debt-postings/set-debt-for-trade/${selectedDebtForTrade._id}`, \r\n          { tradePrice },\r\n          { headers: { 'Authorization': `Bearer ${token}` } }\r\n        );\r\n        setIsTradeModalOpen(false);\r\n        // Refresh your debts list to reflect the change\r\n        fetchDebtsSummary();\r\n        fetchDebtsAvailableForTrade();\r\n      } catch (error) {\r\n        console.error('Error setting debt for trade:', error);\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  const TradeModal = ({ isOpen, onRequestClose, onSubmit }) => {\r\n    const [price, setPrice] = useState('');\r\n  \r\n    const handleSubmit = () => {\r\n      onSubmit(price);\r\n      setPrice('');\r\n    };\r\n  \r\n    return (\r\n      <ReactModal isOpen={isOpen} onRequestClose={onRequestClose}>\r\n        <h2>Set Trade Price</h2>\r\n        <input \r\n          type=\"number\" \r\n          value={price} \r\n          onChange={(e) => setPrice(e.target.value)} \r\n          placeholder=\"Enter price\" \r\n        />\r\n        <button onClick={handleSubmit}>Submit</button>\r\n        <button onClick={onRequestClose}>Cancel</button>\r\n      </ReactModal>\r\n    );\r\n  };\r\n  \r\n\r\n\r\n   // Compute debtsPaidByMe and debtsPaidToMe just before the return statement\r\n   const debtsPaidByMe = debtsHistory.filter(debt => debt.borrower._id === userId);\r\n   const debtsPaidToMe = debtsHistory.filter(debt => debt.lender._id === userId);\r\n  return (\r\n    <div>\r\n      <h2>Dashboard</h2>\r\n      \r\n      <button onClick={openModal}>Post Debt</button>\r\n      <ReactModal isOpen={modalIsOpen} onRequestClose={closeModal}>\r\n        <DebtPostingForm token={token} onClose={closeModal} onNewPosting={handleNewPosting} refreshPostings={fetchUnfulfilledDebts} />\r\n      </ReactModal>\r\n      <button onClick={handleLogout}>Logout</button>\r\n      <h3>Wallet Balance: ${walletBalance}</h3>\r\n      <button onClick={() => handleAddToWallet(prompt(\"Enter amount to add:\"))}>Add to Wallet</button>\r\n      <h3>Debts Owed by Me</h3>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Amount</th>\r\n                        <th>Interest Rate</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {debtsOwedByUser.map(debt => (\r\n                        <tr key={debt._id}>\r\n                            <td>{debt.lender.username}</td> {/* Adjust as per your data structure */}\r\n                            <td>{debt.amount}</td>\r\n                            <td>{debt.interestRate}%</td>\r\n                            <td>\r\n                              <button onClick={() => handlePayDebt(debt._id)}>Pay</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <h3>Debts Owed to Me</h3>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Amount</th>\r\n                        <th>Interest Rate</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {debtsOwedToUser.map(debt => (\r\n                        <tr key={debt._id}>\r\n                            <td>{debt.borrower.username}</td> {/* Adjust as per your data structure */}\r\n                            <td>{debt.amount}</td>\r\n                            <td>{debt.interestRate}%</td>\r\n                            <td>\r\n                              <button onClick={() => openTradeModal(debt)}>Trade Debt</button>\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <TradeModal\r\n              isOpen={isTradeModalOpen}\r\n              onRequestClose={() => setIsTradeModalOpen(false)}\r\n              onSubmit={handleTradeSubmit}\r\n            /> \r\n      \r\n      <h3>Unfulfilled Debt Postings</h3>\r\n      {unfulfilledDebts.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Amount</th>\r\n              <th>Interest Rate</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {unfulfilledDebts.map(debt => (\r\n              <tr key={debt._id}>\r\n                <td>{debt.borrower.username}</td>\r\n                <td>{debt.amount}</td>\r\n                <td>{debt.interestRate}%</td>\r\n                <td>\r\n                  <button onClick={() => handleLendClick(debt._id)}>Lend</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No unfulfilled debt postings available.</p>\r\n      )}\r\n\r\n<h3>Debts Available for Trade</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Borrower Name</th>\r\n            <th>Amount</th>\r\n            <th>Interest Rate</th>\r\n            <th>Trade Price</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {debtsAvailableForTrade.map(debt => (\r\n            <tr key={debt._id}>\r\n              <td>{debt.borrower.username}</td>\r\n              <td>${debt.amount}</td>\r\n              <td>{debt.interestRate}%</td>\r\n              <td>${debt.tradePrice}</td>\r\n              <td>\r\n                <button onClick={() => handleInitiateTrade(debt._id)}>Initiate Trade</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n<h3>Debt History</h3>\r\n      \r\n      <h4>Debts Paid by Me</h4>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Lender Name</th>\r\n            <th>Amount</th>\r\n            <th>Interest Rate</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {debtsPaidByMe.map(debt => (\r\n            <tr key={debt._id}>\r\n              <td>{debt.lender.username}</td>\r\n              <td>${debt.amount}</td>\r\n              <td>{debt.interestRate}%</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h4>Debts Paid to Me</h4>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Borrower Name</th>\r\n            <th>Amount</th>\r\n            <th>Interest Rate</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {debtsPaidToMe.map(debt => (\r\n            <tr key={debt._id}>\r\n              <td>{debt.borrower.username}</td>\r\n              <td>${debt.amount}</td>\r\n              <td>{debt.interestRate}%</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    \r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}